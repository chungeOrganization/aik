<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aik.dao.StoOrderLogisticsInfoMapper">
  <resultMap id="BaseResultMap" type="com.aik.model.StoOrderLogisticsInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderId" jdbcType="INTEGER" property="orderId" />
    <result column="logisticsCompany" jdbcType="INTEGER" property="logisticsCompany" />
    <result column="expressNum" jdbcType="VARCHAR" property="expressNum" />
    <result column="placeTime" jdbcType="TIMESTAMP" property="placeTime" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="updateDate" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, orderId, logisticsCompany, expressNum, placeTime, createDate, updateDate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sto_orderLogisticsInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sto_orderLogisticsInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aik.model.StoOrderLogisticsInfo">
    insert into sto_orderLogisticsInfo (id, orderId, logisticsCompany, 
      expressNum, placeTime, createDate, 
      updateDate)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{logisticsCompany,jdbcType=INTEGER}, 
      #{expressNum,jdbcType=VARCHAR}, #{placeTime,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aik.model.StoOrderLogisticsInfo">
    insert into sto_orderLogisticsInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        orderId,
      </if>
      <if test="logisticsCompany != null">
        logisticsCompany,
      </if>
      <if test="expressNum != null">
        expressNum,
      </if>
      <if test="placeTime != null">
        placeTime,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="updateDate != null">
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="logisticsCompany != null">
        #{logisticsCompany,jdbcType=INTEGER},
      </if>
      <if test="expressNum != null">
        #{expressNum,jdbcType=VARCHAR},
      </if>
      <if test="placeTime != null">
        #{placeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aik.model.StoOrderLogisticsInfo">
    update sto_orderLogisticsInfo
    <set>
      <if test="orderId != null">
        orderId = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="logisticsCompany != null">
        logisticsCompany = #{logisticsCompany,jdbcType=INTEGER},
      </if>
      <if test="expressNum != null">
        expressNum = #{expressNum,jdbcType=VARCHAR},
      </if>
      <if test="placeTime != null">
        placeTime = #{placeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        updateDate = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aik.model.StoOrderLogisticsInfo">
    update sto_orderLogisticsInfo
    set orderId = #{orderId,jdbcType=INTEGER},
      logisticsCompany = #{logisticsCompany,jdbcType=INTEGER},
      expressNum = #{expressNum,jdbcType=VARCHAR},
      placeTime = #{placeTime,jdbcType=TIMESTAMP},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      updateDate = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sto_orderLogisticsInfo
    where orderId = #{orderId} limit 1
  </select>
</mapper>