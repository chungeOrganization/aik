<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aik.dao.AikCouponMapper">
  <resultMap id="BaseResultMap" type="com.aik.model.AikCoupon">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="discountAmount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="minMonetary" jdbcType="DECIMAL" property="minMonetary" />
    <result column="startDate" jdbcType="TIMESTAMP" property="startDate" />
    <result column="endDate" jdbcType="TIMESTAMP" property="endDate" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="updateDate" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, discountAmount, minMonetary, startDate, endDate, createDate, updateDate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aik_coupon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aik_coupon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aik.model.AikCoupon">
    insert into aik_coupon (id, discountAmount, minMonetary, 
      startDate, endDate, createDate, 
      updateDate)
    values (#{id,jdbcType=INTEGER}, #{discountAmount,jdbcType=DECIMAL}, #{minMonetary,jdbcType=DECIMAL}, 
      #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aik.model.AikCoupon">
    insert into aik_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="discountAmount != null">
        discountAmount,
      </if>
      <if test="minMonetary != null">
        minMonetary,
      </if>
      <if test="startDate != null">
        startDate,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="updateDate != null">
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="minMonetary != null">
        #{minMonetary,jdbcType=DECIMAL},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aik.model.AikCoupon">
    update aik_coupon
    <set>
      <if test="discountAmount != null">
        discountAmount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="minMonetary != null">
        minMonetary = #{minMonetary,jdbcType=DECIMAL},
      </if>
      <if test="startDate != null">
        startDate = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        updateDate = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aik.model.AikCoupon">
    update aik_coupon
    set discountAmount = #{discountAmount,jdbcType=DECIMAL},
      minMonetary = #{minMonetary,jdbcType=DECIMAL},
      startDate = #{startDate,jdbcType=TIMESTAMP},
      endDate = #{endDate,jdbcType=TIMESTAMP},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      updateDate = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>