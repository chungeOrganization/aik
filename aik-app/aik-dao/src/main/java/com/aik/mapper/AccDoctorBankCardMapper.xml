<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aik.dao.AccDoctorBankCardMapper">
  <resultMap id="BaseResultMap" type="com.aik.model.AccDoctorBankCard">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="doctorId" jdbcType="INTEGER" property="doctorId" />
    <result column="bankId" jdbcType="INTEGER" property="bankId" />
    <result column="bankName" jdbcType="VARCHAR" property="bankName" />
    <result column="cardCode" jdbcType="VARCHAR" property="cardCode" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, doctorId, bankId, bankName, cardCode, status, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acc_doctorBankCard
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from acc_doctorBankCard
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aik.model.AccDoctorBankCard">
    insert into acc_doctorBankCard (id, doctorId, bankId, 
      bankName, cardCode, status, 
      createTime, updateTime)
    values (#{id,jdbcType=INTEGER}, #{doctorId,jdbcType=INTEGER}, #{bankId,jdbcType=INTEGER}, 
      #{bankName,jdbcType=VARCHAR}, #{cardCode,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aik.model.AccDoctorBankCard">
    insert into acc_doctorBankCard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctorId,
      </if>
      <if test="bankId != null">
        bankId,
      </if>
      <if test="bankName != null">
        bankName,
      </if>
      <if test="cardCode != null">
        cardCode,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardCode != null">
        #{cardCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aik.model.AccDoctorBankCard">
    update acc_doctorBankCard
    <set>
      <if test="doctorId != null">
        doctorId = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        bankId = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        bankName = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardCode != null">
        cardCode = #{cardCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aik.model.AccDoctorBankCard">
    update acc_doctorBankCard
    set doctorId = #{doctorId,jdbcType=INTEGER},
      bankId = #{bankId,jdbcType=INTEGER},
      bankName = #{bankName,jdbcType=VARCHAR},
      cardCode = #{cardCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByDoctorId" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from acc_doctorBankCard
    where doctorId = #{doctorId}
  </select>
  <select id="selectDoctorBankCards" parameterType="int" resultType="java.util.Map">
    select bankName, cardCode
    from acc_doctorBankCard
    where doctorId = #{doctorId} and status = 1
  </select>
</mapper>