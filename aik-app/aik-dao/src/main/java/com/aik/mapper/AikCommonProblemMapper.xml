<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aik.dao.AikCommonProblemMapper">
  <resultMap id="BaseResultMap" type="com.aik.model.AikCommonProblem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="fileUrl" jdbcType="VARCHAR" property="fileUrl" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="updateDate" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, question, keyword, answer, fileUrl, createDate, updateDate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aik_commonProblem
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aik_commonProblem
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aik.model.AikCommonProblem">
    insert into aik_commonProblem (id, type, question, 
      keyword, answer, fileUrl, 
      createDate, updateDate)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{question,jdbcType=VARCHAR}, 
      #{keyword,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aik.model.AikCommonProblem">
    insert into aik_commonProblem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="fileUrl != null">
        fileUrl,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="updateDate != null">
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aik.model.AikCommonProblem">
    update aik_commonProblem
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        fileUrl = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        updateDate = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aik.model.AikCommonProblem">
    update aik_commonProblem
    set type = #{type,jdbcType=TINYINT},
      question = #{question,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      fileUrl = #{fileUrl,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      updateDate = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCommonProblemsByParams" parameterType="java.util.Map" resultType="java.util.Map">
    select id, question, keyword
    from aik_commonProblem
    where 1=1
    <if test="type != null">
      and type =#{type}
    </if>
    order by id desc
    limit ${(page-1)*size}, #{size}
  </select>
  <select id="selectByPage" parameterType="com.aik.model.AikCommonProblem" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from aik_commonProblem
    where 1=1
    <if test="question != null and question != ''">
      and locate(#{question}, question) &gt; 0
    </if>
    order by createDate desc
  </select>
</mapper>